// AhoCorasick: https://codeforces.com/contest/79/submission/92018946
// Hash
const int p = 31 // za mala slova
const int p = 53 // za velika slova
const int mod = 1e9 + 9; // sad cu probati da li moze 1e9 + 7;
int hsh[maxn];
void hes(string a){
   ll pw = 1;
   ff(i,1,sz(a)){
      hsh[i] = add(hsh[i - 1], mul(pw, s[i] - 'a' + 1));
      pw = mul(pw, p);
   }
}

int hes(string a){
    ll pw = 1;
    int hes = 0;
    ff(i,1,sz(a)){
        hes = add(hes, mul(pw, a[i] - 'a' + 1));
        pw = mul(pw, p);
    }
    return hes;
}

// Suffix array
int sa[maxn];
int as[maxn][20];
array<int,3> help[maxn];
void build_sa(string x){
    int len = x.size();
    ff(i,0,len - 1)as[i][0] = x[i] - 'a' + 1;
    ff(j,1,19){
        ff(i,0,len - 1){
            help[i][0] = as[i][j - 1];
            help[i][1] = (i + (1 << (j - 1)) < len ? as[i + (1 << (j - 1))][j - 1] : -1);
            help[i][2] = i;
        }
        sort(help, help + len);
        ff(i,0,len - 1)as[help[i][2]][j] = (i > 0 && (help[i][0] == help[i - 1][0]) && (help[i][1] == help[i - 1][1]) ? as[help[i - 1][2]][j] : i);
    }
    ff(i,0,len - 1)sa[as[i][19]] = i;
//    ff(i,0,len - 1)cout << sa[i] << " ";
//    cout << endl;
}
